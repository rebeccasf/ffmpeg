diff --git a/chromium/config/Chromium/linux/riscv64/config.h b/chromium/config/Chromium/linux/riscv64/config.h
index 250b51f832..4fa9352430 100644
--- a/chromium/config/Chromium/linux/riscv64/config.h
+++ b/chromium/config/Chromium/linux/riscv64/config.h
@@ -1,12 +1,12 @@
 /* Automatically generated by configure - do not modify! */
 #ifndef FFMPEG_CONFIG_H
 #define FFMPEG_CONFIG_H
-/* #define FFMPEG_CONFIGURATION "" */
+/* #define FFMPEG_CONFIGURATION "--disable-everything --disable-all --disable-doc --disable-htmlpages --disable-manpages --disable-podpages --disable-txtpages --disable-static --enable-avcodec --enable-avformat --enable-avutil --enable-fft --enable-rdft --enable-static --enable-libopus --disable-debug --disable-bzlib --disable-error-resilience --disable-iconv --disable-network --disable-schannel --disable-sdl2 --disable-symver --disable-xlib --disable-zlib --disable-securetransport --disable-faan --disable-alsa --disable-autodetect --enable-decoder='vorbis,libopus,flac' --enable-decoder='pcm_u8,pcm_s16le,pcm_s24le,pcm_s32le,pcm_f32le,mp3' --enable-decoder='pcm_s16be,pcm_s24be,pcm_mulaw,pcm_alaw' --enable-demuxer='ogg,matroska,wav,flac,mp3,mov' --enable-parser='opus,vorbis,flac,mpegaudio,vp9' --extra-cflags=-I/build/sw_buildbot/workspace/nwjs-src-thloh/src/third_party/opus/src/include --disable-linux-perf --x86asmexe=nasm --optflags='\"-O2\"' --enable-decoder='theora,vp8' --enable-parser='vp3,vp8' --arch=riscv64 --enable-cross-compile --target-os=linux --sysroot=/build/sw_buildbot/workspace/nwjs-src-thloh/src/build/linux/debian_sid_riscv64-sysroot/ --extra-cflags='--target=riscv64-linux-gnu' --extra-cflags=-mno-relax --extra-cflags='-mabi=lp64d' --extra-ldflags='--target=riscv64-linux-gnu' --extra-ldflags='-L/usr/riscv64-linux-gnu/lib/ -v' --extra-ldflags=-mno-relax --enable-pic --cc=clang --cxx=clang++ --ld=clang --extra-ldflags='-fuse-ld=ld'" -- elide long configuration string from binary */
 #define FFMPEG_LICENSE "LGPL version 2.1 or later"
 #define CONFIG_THIS_YEAR 2022
 #define FFMPEG_DATADIR "/usr/local/share/ffmpeg"
 #define AVCONV_DATADIR "/usr/local/share/ffmpeg"
-#define CC_IDENT "Debian clang version 13.0.1-3+build2"
+#define CC_IDENT "clang version 15.0.0 (https://github.com/llvm/llvm-project/ 8133778d3c8d481891143e21e0c5081a02a9889d)"
 #define OS_NAME linux
 #define av_restrict restrict
 #define EXTERN_PREFIX ""
@@ -205,11 +205,11 @@
 #define HAVE_CABS 0
 #define HAVE_CEXP 0
 #define HAVE_INLINE_ASM 1
-#define HAVE_SYMVER 1
+#define HAVE_SYMVER 0
 #define HAVE_X86ASM 0
 #define HAVE_BIGENDIAN 0
 #define HAVE_FAST_UNALIGNED 0
-#define HAVE_ARPA_INET_H 1
+#define HAVE_ARPA_INET_H 0
 #define HAVE_ASM_TYPES_H 1
 #define HAVE_CDIO_PARANOIA_H 0
 #define HAVE_CDIO_PARANOIA_PARANOIA_H 0
@@ -334,7 +334,7 @@
 #define HAVE_SLEEP 0
 #define HAVE_STRERROR_R 1
 #define HAVE_SYSCONF 1
-#define HAVE_SYSCTL 0 /* #define HAVE_SYSCTL 0 -- forced to 0 for Fuchsia */
+#define HAVE_SYSCTL 0 /* #define HAVE_SYSCTL 1 -- forced to 0 for Fuchsia */
 #define HAVE_USLEEP 1
 #define HAVE_UTGETOSTYPEFROMSTRING 0
 #define HAVE_VIRTUALALLOC 0
@@ -363,7 +363,7 @@
 #define HAVE_INLINE_ASM_NONLOCAL_LABELS 1
 #define HAVE_PRAGMA_DEPRECATED 1
 #define HAVE_RSYNC_CONTIMEOUT 1
-#define HAVE_SYMVER_ASM_LABEL 0
+#define HAVE_SYMVER_ASM_LABEL 1
 #define HAVE_SYMVER_GNU_ASM 1
 #define HAVE_VFP_ARGS 0
 #define HAVE_XFORM_ASM 0
@@ -401,8 +401,8 @@
 #define HAVE_STRUCT_V4L2_FRMIVALENUM_DISCRETE 0
 #define HAVE_GZIP 1
 #define HAVE_LIBDRM_GETFB2 0
-#define HAVE_MAKEINFO 0
-#define HAVE_MAKEINFO_HTML 0
+#define HAVE_MAKEINFO 1
+#define HAVE_MAKEINFO_HTML 1
 #define HAVE_OPENCL_D3D11 0
 #define HAVE_OPENCL_DRM_ARM 0
 #define HAVE_OPENCL_DRM_BEIGNET 0
@@ -502,7 +502,7 @@
 #define CONFIG_LIBOPENJPEG 0
 #define CONFIG_LIBOPENMPT 0
 #define CONFIG_LIBOPENVINO 0
-#define CONFIG_LIBOPUS 0
+#define CONFIG_LIBOPUS 1
 #define CONFIG_LIBPLACEBO 0
 #define CONFIG_LIBPULSE 0
 #define CONFIG_LIBRABBITMQ 0
diff --git a/chromium/config/Chromium/linux/riscv64/config_components.h b/chromium/config/Chromium/linux/riscv64/config_components.h
index 02b81bec88..227b155c2a 100644
--- a/chromium/config/Chromium/linux/riscv64/config_components.h
+++ b/chromium/config/Chromium/linux/riscv64/config_components.h
@@ -567,7 +567,7 @@
 #define CONFIG_LIBOPENCORE_AMRNB_DECODER 0
 #define CONFIG_LIBOPENCORE_AMRWB_DECODER 0
 #define CONFIG_LIBOPENJPEG_DECODER 0
-#define CONFIG_LIBOPUS_DECODER 0
+#define CONFIG_LIBOPUS_DECODER 1
 #define CONFIG_LIBRSVG_DECODER 0
 #define CONFIG_LIBSPEEX_DECODER 0
 #define CONFIG_LIBUAVS3D_DECODER 0
@@ -653,6 +653,7 @@
 #define CONFIG_PRORES_ENCODER 0
 #define CONFIG_PRORES_AW_ENCODER 0
 #define CONFIG_PRORES_KS_ENCODER 0
+#define CONFIG_QOI_ENCODER 0
 #define CONFIG_QTRLE_ENCODER 0
 #define CONFIG_R10K_ENCODER 0
 #define CONFIG_R210_ENCODER 0
@@ -937,6 +938,7 @@
 #define CONFIG_OPUS_PARSER 1
 #define CONFIG_PNG_PARSER 0
 #define CONFIG_PNM_PARSER 0
+#define CONFIG_QOI_PARSER 0
 #define CONFIG_RV30_PARSER 0
 #define CONFIG_RV40_PARSER 0
 #define CONFIG_SBC_PARSER 0
@@ -1115,6 +1117,7 @@
 #define CONFIG_TREBLE_FILTER 0
 #define CONFIG_TREMOLO_FILTER 0
 #define CONFIG_VIBRATO_FILTER 0
+#define CONFIG_VIRTUALBASS_FILTER 0
 #define CONFIG_VOLUME_FILTER 0
 #define CONFIG_VOLUMEDETECT_FILTER 0
 #define CONFIG_AEVALSRC_FILTER 0
diff --git a/chromium/config/Chromium/linux/riscv64/libavutil/ffversion.h b/chromium/config/Chromium/linux/riscv64/libavutil/ffversion.h
index 93ecb0b60a..5f02977a7d 100644
--- a/chromium/config/Chromium/linux/riscv64/libavutil/ffversion.h
+++ b/chromium/config/Chromium/linux/riscv64/libavutil/ffversion.h
@@ -1,5 +1,5 @@
 /* Automatically generated by version.sh, do not manually edit! */
 #ifndef AVUTIL_FFVERSION_H
 #define AVUTIL_FFVERSION_H
-#define FFMPEG_VERSION "N-108372-g251d119ba9"
+#define FFMPEG_VERSION "git-2022-07-20-1a69da0824"
 #endif /* AVUTIL_FFVERSION_H */
diff --git a/chromium/scripts/build_ffmpeg.py b/chromium/scripts/build_ffmpeg.py
index 5baf9abc94..c8d5f24136 100755
--- a/chromium/scripts/build_ffmpeg.py
+++ b/chromium/scripts/build_ffmpeg.py
@@ -297,7 +297,8 @@ def SetupAndroidToolchain(target_arch):
       '--extra-ldflags=--target=' + toolchain_bin_prefix + toolchain_level,
       '--extra-ldflags=-L{}'.format(fakedir),
       '--extra-ldflags=-L' + clang_toolchain_dir + toolchain_bin_prefix,
-      '--extra-ldflags=--gcc-toolchain=' + clang_toolchain_dir,
+#      '--extra-ldflags=--gcc-toolchain=' + clang_toolchain_dir,
+      '--extra-ldflags=--gcc-toolchain=/opt/riscv/' ,
       '--target-os=android',
   ]
 
@@ -900,11 +901,13 @@ def ConfigureAndBuild(target_arch, target_os, host_os, host_arch, parallel_jobs,
           '--arch=riscv64',
           '--enable-cross-compile',
           '--target-os=linux',
-          '--sysroot=/home/rebecca.chang/backup/deb-jh7100/rfs',
+          '--sysroot=/build/sw_buildbot/workspace/nwjs-src-thloh/src/build/linux/debian_sid_riscv64-sysroot/',
           '--extra-cflags=--target=riscv64-linux-gnu',
           '--extra-cflags=-mno-relax',
           '--extra-cflags=-mabi=lp64d',
           '--extra-ldflags=--target=riscv64-linux-gnu',
+#      '--extra-ldflags=--gcc-toolchain=/opt/riscv/' ,
+      '--extra-ldflags=-L/usr/riscv64-linux-gnu/lib/ -v',
           '--extra-ldflags=-mno-relax',
       ])
     else:
@@ -933,7 +936,7 @@ def ConfigureAndBuild(target_arch, target_os, host_os, host_arch, parallel_jobs,
     # ld.lld, to ensure that things like cross-compilation and LTO work.
     # This does not work for ia32 and is always used on mac.
     if target_arch != 'ia32' and target_os != 'mac':
-      configure_flags['Common'].append('--extra-ldflags=-fuse-ld=lld')
+      configure_flags['Common'].append('--extra-ldflags=-fuse-ld=ld')
 
   # Should be run on Mac, unless we're cross-compiling on Linux.
   if target_os == 'mac':
diff --git a/chromium/scripts/copy_config.sh b/chromium/scripts/copy_config.sh
index 4db59d2081..cbfd974ace 100755
--- a/chromium/scripts/copy_config.sh
+++ b/chromium/scripts/copy_config.sh
@@ -10,7 +10,7 @@ for os in android linux linux-noasm mac win; do
     # Copy config files for various architectures:
     #   - ia32/x64 have config.asm, config.h
     #   - arm/arm-neon have config.h
-    for arch in arm arm-neon arm64 ia32 x64 mipsel mips64el; do
+    for arch in arm arm-neon arm64 ia32 x64 mipsel mips64el riscv64; do
       # Don't waste time on non-existent configs, if no config.h then skip.
       [ ! -e "build.$arch.$os/$target/config.h" ] && continue
       for f in config.h config_components.h config.asm libavutil/avconfig.h libavutil/ffversion.h libavcodec/bsf_list.c libavcodec/codec_list.c libavcodec/parser_list.c libavformat/demuxer_list.c libavformat/muxer_list.c libavformat/protocol_list.c; do
diff --git a/chromium/scripts/generate_gn.py b/chromium/scripts/generate_gn.py
index e86c7e0b6f..b805bd597d 100755
--- a/chromium/scripts/generate_gn.py
+++ b/chromium/scripts/generate_gn.py
@@ -78,7 +78,7 @@ _Attrs = ('ARCHITECTURE', 'TARGET', 'PLATFORM')
 Attr = collections.namedtuple('Attr', _Attrs)(*_Attrs)
 SUPPORT_MATRIX = {
     Attr.ARCHITECTURE:
-        set(['ia32', 'x64', 'arm', 'arm64', 'arm-neon']),
+        set(['ia32', 'x64', 'arm', 'arm64', 'arm-neon', 'riscv']),
     Attr.TARGET:
         set(['Chromium', 'Chrome', 'ChromeOS']),
     Attr.PLATFORM:
@@ -315,6 +315,8 @@ class SourceSet(object):
         arch_condition = None
       elif condition.ARCHITECTURE == 'arm-neon':
         arch_condition = 'current_cpu == "arm" && arm_use_neon'
+      elif condition.ARCHITECTURE == 'riscv64':
+        arch_condition = 'current_cpu == "riscv64"'
       elif condition.ARCHITECTURE == 'ia32':
         arch_condition = 'current_cpu == "x86"'
       else:
@@ -953,11 +955,15 @@ def main():
   sets = []
 
   for arch in SUPPORT_MATRIX[Attr.ARCHITECTURE]:
+    print(f'{arch}')
     for target in SUPPORT_MATRIX[Attr.TARGET]:
+      print(f'{target}')
       for platform in SUPPORT_MATRIX[Attr.PLATFORM]:
         # Assume build directory is of the form build.$arch.$platform/$target.
+        print(f'{platform}')
         name = ''.join(['build.', arch, '.', platform])
-        build_dir = os.path.join(options.build_dir, name, target)
+        build_dir = os.path.join(options.build_dir, target)
+        print(f'{build_dir}')
         if not os.path.exists(build_dir):
           continue
         print(f'Processing build directory: {name}')
